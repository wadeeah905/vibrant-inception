@inherits Crm.Library.Modularization.CrmViewUserControl
@using Crm.Library.Globalization.Extensions

<div class="modal-header card-header ch-alt">
	<button type="button" class="close" data-dismiss="modal" aria-label="@(Html.Localize("Close"))">
		<span aria-hidden="true">&times;</span>
	</button>
	<h4 class="modal-title">@(Html.Localize("EditDispatch"))</h4>
</div>
<div class="modal-body card-body card-padding">
	<form role="form" action="#" data-bind="with: dispatch">
		<!-- ko if: $root.readonly -->
		<div class="container p-0">
			<div class="row">
				<div class="col-sm-5">
					<form-element params="value: Date, caption: 'StartDate', type: 'datePicker', datePickerOptions: { pickDateTime: true }, disable: true"></form-element>
				</div>
				<div class="col-sm-5">
					<form-element params="value: EndDate, caption: 'EndDateCaption', type: 'datePicker', datePickerOptions: { pickDateTime: true }, disable: true"></form-element>
				</div>
				<div class="col-sm-2">
					<form-element params="value: $root.duration, caption: 'NetWorkMinutes', type: 'durationPicker', disable: true"></form-element>
				</div>
			</div>
			<form-element params="value: $root.isReleased, caption: 'Released', type: 'checkbox', disable: true"></form-element>
			<form-element params="value: IsFixed, caption: 'Fixed', type: 'checkbox', disable: true"></form-element>
			<div class="fg-line">
				<form-element params="value: Remark, caption: 'Remark', type: 'text', disable: true"></form-element>
			</div>
		</div>
		<div class="fg-line">
			<label class="fg-label control-label" data-bind="tooltip: true" data-placement="bottom" title="@(Html.Localize("UserGroupFilter"))">@(Html.Localize("Usergroups")) (@(Html.Localize("Filter")))</label>
			<select class="form-control" id="usergroups_selection" data-bind="select2autocompleter: { data: TeamId, autocompleteOptions: {  table: 'Main_Usergroup', joins: ['Members'], mapDisplayObject: Helper.User.mapUsergroupForSelect2Display, onSelect: $root.OnTeamSelected.bind($root) } }, disable: true">
			</select>
			<button type="button" class="btn btn-xs btn-default pull-right" data-bind="click: $root.addResourcesToProfile, disable: $root.loading || TeamId === null">
				@(Html.Localize("AssignResourcesFromTeam"))
			</button>
		</div>
		<div class="fg-line">
			<label class="fg-label control-label">@(Html.Localize("Technician"))</label>
			<select name="technicians" class="form-control" multiple="multiple" data-bind="select2autocompleter2: { data: $root.assignedResources, autocompleteOptions: { customFilter: $root.resourceFilter.bind($root), table: 'Main_User', mapDisplayObject: Helper.User.mapForSelect2Display, placeholder: $parent.placeholder } }, disable: true">
			</select>
			<div class="row">
				<div class="col-md-8 col-xs-8" data-bind="validationElement: $root.assignedResources">
					<small class="help-block pre-line" data-bind="validationMessage: $root.assignedResources"></small>
				</div>
			</div>
		</div>
		<div class="fg-line">
			<label class="fg-label control-label">@(Html.Localize("VehiclesAndTools"))</label>
			<select name="tools" class="form-control" multiple="multiple" data-bind="select2autocompleter2: { data: $root.assignedTools, autocompleteOptions: { customFilter: $root.toolsFilter.bind($root), table: 'CrmArticle_Article', mapDisplayObject: $root.mapToolForSelect2Display, placeholder: $parent.placeholder } }, disable: true">
			</select>
		</div>
		<!-- /ko -->
		<!-- ko ifnot: $root.readonly -->
		<!-- ko if: $parent.type == 'ServiceOrderDispatch' -->
		<div data-bind="html: $parent.articleUserRelationshipValidationText"></div>
		<!-- ko if: $parent.warnings().length > 0 -->
		<div id="warnings" class="alert alert-warning" role="alert">
			<h4 data-bind="translatedText:'Warning'"></h4>
			<!-- ko foreach: $parent.warnings() -->
			<p data-bind="text: $data"></p>
			<!-- /ko -->
		</div>
		<!-- /ko -->
		<div class="container p-0">
			<div class="row">
				<div class="col-sm-5">
					<form-element params="value: Date, caption: 'StartDate', type: 'datePicker', datePickerOptions: { pickDateTime: true }, disable: IsFixed || !$root.dispatchInEditableState()"></form-element>
				</div>
				<div class="col-sm-5">
					<form-element params="value: EndDate, caption: 'EndDateCaption', type: 'datePicker', datePickerOptions: { pickDateTime: true }, disable: IsFixed || !$root.dispatchInEditableState()"></form-element>
				</div>
				<div class="col-sm-2">
					<form-element params="value: $root.duration, caption: 'NetWorkMinutes', type: 'durationPicker', disable: IsFixed || !$root.dispatchInEditableState()"></form-element>
				</div>
			</div>
			<form-element params="value: $root.isReleased, caption: 'Released', type: 'checkbox', disable: !$root.dispatchInEditableState()"></form-element>
			<form-element params="value: IsFixed, caption: 'Fixed', type: 'checkbox', disable: !$root.dispatchInEditableState()"></form-element>
			<div class="fg-line">
				<form-element params="value: Remark, caption: 'Remark', type: 'text', disable: !$root.dispatchInEditableState()"></form-element>
			</div>
		</div>
		<div class="fg-line">
			<label class="fg-label control-label" data-bind="tooltip: true" data-placement="bottom" title="@(Html.Localize("UserGroupFilter"))">@(Html.Localize("Usergroups")) (@(Html.Localize("Filter")))</label>
			<select class="form-control" id="usergroups_selection" data-bind="select2autocompleter: { data: TeamId, autocompleteOptions: {  table: 'Main_Usergroup', joins: ['Members'], mapDisplayObject: Helper.User.mapUsergroupForSelect2Display, onSelect: $root.OnTeamSelected.bind($root) } }, disable: !$root.dispatchInEditableState()">
			</select>
			<button type="button" class="btn btn-xs btn-default pull-right" data-bind="click: $root.addResourcesToProfile, disable: $root.loading || TeamId === null">
				@(Html.Localize("AssignResourcesFromTeam"))
			</button>
		</div>
		<div class="fg-line">
			<label class="fg-label control-label">@(Html.Localize("Technician"))</label>
			<select name="technicians" class="form-control" multiple="multiple" data-bind="select2autocompleter2: { data: $root.assignedResources, autocompleteOptions: { customFilter: $root.resourceFilter.bind($root), table: 'Main_User', mapDisplayObject: Helper.User.mapForSelect2Display, placeholder: $parent.placeholder } }, disable: !$root.dispatchInEditableState()">
			</select>
			<div class="row">
				<div class="col-md-8 col-xs-8" data-bind="validationElement: $root.assignedResources">
					<small class="help-block pre-line" data-bind="validationMessage: $root.assignedResources"></small>
				</div>
			</div>
		</div>
		<div class="fg-line">
			<label class="fg-label control-label">@(Html.Localize("VehiclesAndTools"))</label>
			<select name="tools" class="form-control" multiple="multiple" data-bind="select2autocompleter2: { data: $root.assignedTools, autocompleteOptions: { customFilter: $root.toolsFilter.bind($root), table: 'CrmArticle_Article', mapDisplayObject: $root.mapToolForSelect2Display, placeholder: $parent.placeholder } }, disable: !$root.dispatchInEditableState()">
			</select>
		</div>
		<!-- /ko -->
		<!-- /ko -->
		<!-- ko if: $parent.type == 'Absence' -->
		<div class="container p-0">
			<!-- ko if: $data.innerInstance instanceof window.database.CrmArticle_ArticleDowntime.CrmArticle_ArticleDowntime -->
			<form-element id="DowntimeReasonKey" params="value: DowntimeReasonKey, caption: 'ArticleDowntimeReason', type: 'select'">
				<select name="DowntimeReasonKey" class="form-control" data-bind="select2autocompleter: { data: value, autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_ArticleDowntimeReason') }">
				</select>
			</form-element>
			<!-- /ko -->
			<!-- ko if: $data.innerInstance instanceof window.database.SmsScheduler_Absence.SmsScheduler_Absence -->
			<form-element id="TimeEntryTypeKey" params="value: TimeEntryTypeKey, caption: 'TimeEntryType', type: 'select', disable: $root.lookups.timeEntryTypes.$array.length === 0">
				<select name="TimeEntryTypeKey" class="form-control" data-bind="select2autocompleter: { data: value, autocompleteOptions: { mapDisplayObject: window.Helper.Lookup.mapLookupForSelect2Display, table: 'CrmPerDiem_TimeEntryType', getElementByIdQuery: window.Helper.Lookup.getLookupByKeyQuery, customFilter: function (query, term) { query = query.filter('it.ShowInScheduler === true'); return window.Helper.Lookup.queryLookup(query, term); } } }, disable: disable">
				</select>
			</form-element>
			<!-- /ko -->
			<div class="row">
				<div class="col-sm-6">
					<form-element params="value: From, caption: 'From', type: 'datePicker', datePickerOptions: { pickDateTime: true }"></form-element>
				</div>
			</div>
			<div class="row">
				<div class="col-sm-6">
					<form-element params="value: To, caption: 'To', type: 'datePicker', datePickerOptions: { pickDateTime: true }"></form-element>
				</div>
			</div>
			<div class="row">
				<div class="col-sm-6">
					<form-element params="value: Description, caption: 'Description', type: 'text'"></form-element>
				</div>
			</div>
		</div>
		<!-- /ko -->
	</form>
</div>
<div class="modal-footer card-header ch-alt p-15">
	<button type="button" class="btn btn-lg btn-default f-13 waves-effect"  data-dismiss="modal" data-bind="click: cancel, disable: loading">
		@(Html.Localize("Cancel"))
	</button>
	<button type="button" class="btn btn-lg btn-primary f-13 waves-effect" data-bind="click: save, disable: loading">
		@(Html.Localize("Save"))
	</button>
</div>