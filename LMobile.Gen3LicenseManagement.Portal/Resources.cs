// <auto-generated />
#pragma warning disable 108
namespace LMobile.Gen3LicenseManagement.Portal {
	[global::System.CodeDom.Compiler.GeneratedCode("LMobile.ResourceStringCompiler", "2.3.36.0")]
	public static partial class Resources {
		public static string @AbsenderInput() {
			return @AbsenderInput(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @AbsenderInput(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Absender :";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Activity() {
			return @Activity(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Activity(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Letzte Aktivit\u00E4t";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @B_Back() {
			return @B_Back(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @B_Back(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Zur\u00FCck";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @B_CANCEL() {
			return @B_CANCEL(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @B_CANCEL(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Abbrechen";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @B_NO() {
			return @B_NO(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @B_NO(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Nein";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @B_OK() {
			return @B_OK(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @B_OK(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Ok";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @B_YES() {
			return @B_YES(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @B_YES(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Ja";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Back() {
			return @Back(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Back(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Zur\u00FCck";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Cancel() {
			return @Cancel(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Cancel(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Abbruch";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Confirmation() {
			return @Confirmation(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Confirmation(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Best\u00E4tigung";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ContractNo() {
			return @ContractNo(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ContractNo(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projekt-Nummer";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ContractNoAlreadyExists(string @description, string @customerName1) {
			return @ContractNoAlreadyExists(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @description, @customerName1);
		}
		public static string @ContractNoAlreadyExists(global::System.Globalization.CultureInfo _language, string @description, string @customerName1) {
			return @ContractNoAlreadyExists(_language, _language, @description, @customerName1);
		}
		public static string @ContractNoAlreadyExists(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @description, string @customerName1) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Diese Projektnummer ist bereits f\u00FCr das Projekt '{0}' des Kunden '{1}' vergeben.", @description, @customerName1);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ContractNosDontMatch(string @requestContractNo, string @licenseContractNo) {
			return @ContractNosDontMatch(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @requestContractNo, @licenseContractNo);
		}
		public static string @ContractNosDontMatch(global::System.Globalization.CultureInfo _language, string @requestContractNo, string @licenseContractNo) {
			return @ContractNosDontMatch(_language, _language, @requestContractNo, @licenseContractNo);
		}
		public static string @ContractNosDontMatch(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @requestContractNo, string @licenseContractNo) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Die Projektnummer aus der Anfrage {0} stimmt nicht mit der aktuellen {1} \u00FCberein.", @requestContractNo, @licenseContractNo);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Create() {
			return @Create(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Create(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Erstellen";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CreatePortable() {
			return @CreatePortable(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CreatePortable(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Portable erstellen";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Customer() {
			return @Customer(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Customer(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Kunde";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerAddress() {
			return @CustomerAddress(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CustomerAddress(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Strasse";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerAddressHasOnlyNCharachters(int @length) {
			return @CustomerAddressHasOnlyNCharachters(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @length);
		}
		public static string @CustomerAddressHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, int @length) {
			return @CustomerAddressHasOnlyNCharachters(_language, _language, @length);
		}
		public static string @CustomerAddressHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, int @length) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Die Kundenadresse ist begrenzt auf {0} Zeichen.", @length);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerCity() {
			return @CustomerCity(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CustomerCity(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "PLZ / Ort";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerCityHasOnlyNCharachters(int @length) {
			return @CustomerCityHasOnlyNCharachters(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @length);
		}
		public static string @CustomerCityHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, int @length) {
			return @CustomerCityHasOnlyNCharachters(_language, _language, @length);
		}
		public static string @CustomerCityHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, int @length) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Die Stadt ist begrenzt auf {0} Zeichen.", @length);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerDefaulteMailHasOnlyNCharachters(int @length) {
			return @CustomerDefaulteMailHasOnlyNCharachters(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @length);
		}
		public static string @CustomerDefaulteMailHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, int @length) {
			return @CustomerDefaulteMailHasOnlyNCharachters(_language, _language, @length);
		}
		public static string @CustomerDefaulteMailHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, int @length) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Die Email-Adresse ist begrenzt auf {0} Zeichen.", @length);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerEMail() {
			return @CustomerEMail(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CustomerEMail(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "EMail";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerEMailIsMandatory() {
			return @CustomerEMailIsMandatory(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CustomerEMailIsMandatory(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Die Kunden-EMail muss gef\u00FCllt sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerName1() {
			return @CustomerName1(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CustomerName1(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Kunden-Name";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerName1HasOnlyNCharachters(int @length) {
			return @CustomerName1HasOnlyNCharachters(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @length);
		}
		public static string @CustomerName1HasOnlyNCharachters(global::System.Globalization.CultureInfo _language, int @length) {
			return @CustomerName1HasOnlyNCharachters(_language, _language, @length);
		}
		public static string @CustomerName1HasOnlyNCharachters(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, int @length) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Der Kundenname #1 ist begrenzt auf {0} Zeichen.", @length);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerName2HasOnlyNCharachters(int @length) {
			return @CustomerName2HasOnlyNCharachters(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @length);
		}
		public static string @CustomerName2HasOnlyNCharachters(global::System.Globalization.CultureInfo _language, int @length) {
			return @CustomerName2HasOnlyNCharachters(_language, _language, @length);
		}
		public static string @CustomerName2HasOnlyNCharachters(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, int @length) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Der Kundenname #2 ist begrenzt auf {0} Zeichen.", @length);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerNameIsMandatory() {
			return @CustomerNameIsMandatory(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CustomerNameIsMandatory(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Der Kundenname muss gef\u00FCllt sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerNo() {
			return @CustomerNo(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CustomerNo(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Kunden-Nummer (NAV)";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerNoAlreadyExists(string @customerName1) {
			return @CustomerNoAlreadyExists(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @customerName1);
		}
		public static string @CustomerNoAlreadyExists(global::System.Globalization.CultureInfo _language, string @customerName1) {
			return @CustomerNoAlreadyExists(_language, _language, @customerName1);
		}
		public static string @CustomerNoAlreadyExists(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @customerName1) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Diese Kundennummer ist bereits f\u00FCr den Kunden '{0}' vergeben.", @customerName1);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerNoHasOnlyNCharachters(int @length) {
			return @CustomerNoHasOnlyNCharachters(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @length);
		}
		public static string @CustomerNoHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, int @length) {
			return @CustomerNoHasOnlyNCharachters(_language, _language, @length);
		}
		public static string @CustomerNoHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, int @length) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Die Kundennummer ist begrenzt auf {0} Zeichen.", @length);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @CustomerNoIsMandatory() {
			return @CustomerNoIsMandatory(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @CustomerNoIsMandatory(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Die Kundennummer muss gef\u00FCllt sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @D_Installation() {
			return @D_Installation(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @D_Installation(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "M\u00F6chten Sie diese Installation wirklich l\u00F6schen?";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @D_Module() {
			return @D_Module(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @D_Module(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "M\u00F6chten Sie dieses Modul wirklich l\u00F6schen?";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @DeactivateCustomer() {
			return @DeactivateCustomer(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @DeactivateCustomer(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Kunden deaktivieren";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Description() {
			return @Description(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Description(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Bezeichnung";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @DescriptionEmpty() {
			return @DescriptionEmpty(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @DescriptionEmpty(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Die Beschreibung muss gef\u00FCllt sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @DeveloperDeleteConfirmation() {
			return @DeveloperDeleteConfirmation(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @DeveloperDeleteConfirmation(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Wollen Sie diesen Entwickler-Eintrag wirklich l\u00F6schen?";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @DeveloperLicenseCantBeImported() {
			return @DeveloperLicenseCantBeImported(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @DeveloperLicenseCantBeImported(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Lizenz mit dem Hardware-Schl\u00FCssel eines Entwicklers darf nicht importiert werden.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @DevelopersMenu() {
			return @DevelopersMenu(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @DevelopersMenu(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Entwickler";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Download() {
			return @Download(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Download(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Download";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @E_EndDateSmallerStartDate() {
			return @E_EndDateSmallerStartDate(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @E_EndDateSmallerStartDate(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Das Enddatum darf nicht kleiner als das Startdatum sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @E_StartDateBiggerEndDate() {
			return @E_StartDateBiggerEndDate(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @E_StartDateBiggerEndDate(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Das Startdatum darf nicht gr\u00F6\u00DFer als das Enddatum sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Edit() {
			return @Edit(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Edit(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "\u00C4ndern";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @EinstellungenFurDenEmail() {
			return @EinstellungenFurDenEmail(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @EinstellungenFurDenEmail(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Einstellungen f\u00FCr den E-Mail-Versand";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @EmailAuswahlen() {
			return @EmailAuswahlen(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @EmailAuswahlen(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "E-Mail-Vorlage ausw\u00E4hlen :";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @EmailInput() {
			return @EmailInput(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @EmailInput(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Email  :";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @EMailNotFilled() {
			return @EMailNotFilled(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @EMailNotFilled(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Die eMail-Adresse ist nicht gef\u00FCllt.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @EmailSenden() {
			return @EmailSenden(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @EmailSenden(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Email senden";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @EmailSubject() {
			return @EmailSubject(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @EmailSubject(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "L-mobile neue Lizenz";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @EMailWithAttachedLicenseBody(string @eMail, string @licenseKey) {
			return @EMailWithAttachedLicenseBody(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @eMail, @licenseKey);
		}
		public static string @EMailWithAttachedLicenseBody(global::System.Globalization.CultureInfo _language, string @eMail, string @licenseKey) {
			return @EMailWithAttachedLicenseBody(_language, _language, @eMail, @licenseKey);
		}
		public static string @EMailWithAttachedLicenseBody(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @eMail, string @licenseKey) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Sehr geehrter Kunde,\u000A\u000Awir liefern Ihnen gem\u00E4\u00DF Ihrem Auftrag die folgenden Standardsoftware-Lizenzen und bitten um schriftliche Lieferbest\u00E4tigung (per Email an {0}), dass Sie diese erhalten haben.\u000A\u000ABitte f\u00FCgen Sie den folgenden Lizenzschl\u00FCssel in der Verwaltung Ihres L-mobile Projektes hinzu.\u000A\u000ALizenzschl\u00FCssel:\u000A{1}\u000A\u000ABitte antworten Sie nicht auf diese eMail, sondern melden sich bei R\u00FCckfragen beim L-mobile Service-Team.", @eMail, @licenseKey);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @EMailWithAttachedLicenseSubject(string @installationType, string @projectDescription) {
			return @EMailWithAttachedLicenseSubject(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @installationType, @projectDescription);
		}
		public static string @EMailWithAttachedLicenseSubject(global::System.Globalization.CultureInfo _language, string @installationType, string @projectDescription) {
			return @EMailWithAttachedLicenseSubject(_language, _language, @installationType, @projectDescription);
		}
		public static string @EMailWithAttachedLicenseSubject(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @installationType, string @projectDescription) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "L-mobile Lizenz ({0}) f\u00FCr das Projekt '{1}'", @installationType, @projectDescription);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Exit() {
			return @Exit(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Exit(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Wirklich abmelden?";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ExpirationDate() {
			return @ExpirationDate(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ExpirationDate(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "endet am";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ExpirationInMonth() {
			return @ExpirationInMonth(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ExpirationInMonth(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Testzeitraum in Monaten";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Export() {
			return @Export(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Export(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Exportieren";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Frau() {
			return @Frau(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Frau(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Frau";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @FromAddress() {
			return @FromAddress(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @FromAddress(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "support@l-mobile.com";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Gen3CustomersMenu() {
			return @Gen3CustomersMenu(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Gen3CustomersMenu(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Gen3 Kunden";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Gen3LicenseListTitle() {
			return @Gen3LicenseListTitle(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Gen3LicenseListTitle(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "\u00DCbersicht der Lizenzen Generation 3";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Gen3LicensesMenu() {
			return @Gen3LicensesMenu(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Gen3LicensesMenu(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Gen 3 Lizenzen";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Gen3ProjectsMenu() {
			return @Gen3ProjectsMenu(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Gen3ProjectsMenu(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Gen3 Projekte";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Guid() {
			return @Guid(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Guid(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Schl\u00FCssel";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @HardwareKey() {
			return @HardwareKey(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @HardwareKey(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Hardware-Schl\u00FCssel";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @HardwareKeyEmpty() {
			return @HardwareKeyEmpty(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @HardwareKeyEmpty(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Der Hardware-Schl\u00FCssel ist nicht gef\u00FCllt.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @HardwareKeyUsed() {
			return @HardwareKeyUsed(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @HardwareKeyUsed(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Der Hardware-Schl\u00FCssel ist schon registriert.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Herr() {
			return @Herr(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Herr(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Herr";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Import() {
			return @Import(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Import(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Importieren";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ImportInstallationRequest() {
			return @ImportInstallationRequest(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ImportInstallationRequest(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Installation importieren";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @InstallationInformationTitle() {
			return @InstallationInformationTitle(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @InstallationInformationTitle(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Installiert / Angefragt";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @InstallationKey() {
			return @InstallationKey(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @InstallationKey(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Installiert auf";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @InstallationType() {
			return @InstallationType(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @InstallationType(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Systemtyp";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @InstallationTypeEmpty() {
			return @InstallationTypeEmpty(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @InstallationTypeEmpty(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Der Systemtyp ist nicht gef\u00FCllt.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @InstallationTypeIs(string @installationType) {
			return @InstallationTypeIs(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @installationType);
		}
		public static string @InstallationTypeIs(global::System.Globalization.CultureInfo _language, string @installationType) {
			return @InstallationTypeIs(_language, _language, @installationType);
		}
		public static string @InstallationTypeIs(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @installationType) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Systemtyp '{0}'", @installationType);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @InstallationTypeNotFound(string @installationType) {
			return @InstallationTypeNotFound(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @installationType);
		}
		public static string @InstallationTypeNotFound(global::System.Globalization.CultureInfo _language, string @installationType) {
			return @InstallationTypeNotFound(_language, _language, @installationType);
		}
		public static string @InstallationTypeNotFound(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @installationType) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Der Installationstyp '{0}' ist nicht zugelassen. Es existieren derzeit 'PROD', 'TEST' und 'DEMO'.", @installationType);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblAddTempLicenses() {
			return @L_lblAddTempLicenses(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblAddTempLicenses(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Temp. Lizenz (Prod & Test)";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblCountModule() {
			return @L_lblCountModule(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblCountModule(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Anzahl Module:";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblFill() {
			return @L_lblFill(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblFill(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "F\u00FCllen";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblLicenseCountProd() {
			return @L_lblLicenseCountProd(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblLicenseCountProd(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Liz. Prod";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblLicenseCountTest() {
			return @L_lblLicenseCountTest(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblLicenseCountTest(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Liz. Test";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblSerachModuleByName() {
			return @L_lblSerachModuleByName(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblSerachModuleByName(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Modulname";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblSerachModuleByNameDescription() {
			return @L_lblSerachModuleByNameDescription(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblSerachModuleByNameDescription(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Suche nach Modulteiltext (z.B. \"WH51\", \"waren\"), unabb\u00E4ngig von der Modulgruppe";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblTempLicensesExpirationDate() {
			return @L_lblTempLicensesExpirationDate(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblTempLicensesExpirationDate(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "bis";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_lblTempLicensesStartDate() {
			return @L_lblTempLicensesStartDate(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_lblTempLicensesStartDate(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "von";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @L_Logout() {
			return @L_Logout(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @L_Logout(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Abmelden";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @lblEMail() {
			return @lblEMail(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @lblEMail(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "E-mail";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @lblLanguage() {
			return @lblLanguage(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @lblLanguage(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Sprache";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @lblPrinterName() {
			return @lblPrinterName(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @lblPrinterName(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Druckername";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @LicenseCount() {
			return @LicenseCount(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @LicenseCount(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Lizenzen Produktivsystem";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @LicenseCountShort() {
			return @LicenseCountShort(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @LicenseCountShort(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Lizenzen";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @LicenseRequest() {
			return @LicenseRequest(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @LicenseRequest(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Lizenz-Anfrage";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @LogEntryInformation() {
			return @LogEntryInformation(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @LogEntryInformation(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Beschreibung";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @LogEntryMessageType() {
			return @LogEntryMessageType(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @LogEntryMessageType(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Typ";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ModulesMenu() {
			return @ModulesMenu(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ModulesMenu(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Module";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ModulInput() {
			return @ModulInput(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ModulInput(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Modul hinzugef\u00FCgt:(module1, module2..)\"";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Name() {
			return @Name(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Name(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Name";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NameEmpty() {
			return @NameEmpty(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NameEmpty(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Der Name ist nicht gef\u00FCllt.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NavigateLogEntries() {
			return @NavigateLogEntries(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NavigateLogEntries(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Lebenslauf";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NeueLizenzAddModul() {
			return @NeueLizenzAddModul(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NeueLizenzAddModul(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neue Lizenz GEN3 add Modul";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NeueLizenzIncreaseNumberUser() {
			return @NeueLizenzIncreaseNumberUser(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NeueLizenzIncreaseNumberUser(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neue Lizenz GEN3 (increase number of userlicenses)";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NeueLizenzInventurTemporar() {
			return @NeueLizenzInventurTemporar(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NeueLizenzInventurTemporar(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neue Lizenz GEN3 Inventur und tempor\u00E4r";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NeueLizenzNeuKunde() {
			return @NeueLizenzNeuKunde(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NeueLizenzNeuKunde(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "L-mobile neue Lizenz GEN3 Neukunde (Contract number , Project guid)";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NeueLizenzTestInstallation() {
			return @NeueLizenzTestInstallation(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NeueLizenzTestInstallation(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neue Lizenz GEN3 for test installation";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NeuLizenzNeueModulUndBenuzter() {
			return @NeuLizenzNeueModulUndBenuzter(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NeuLizenzNeueModulUndBenuzter(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neue Lizenz GEN3 neue Module und Benutzer Lizenzen";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NeuLizenzTestmodul() {
			return @NeuLizenzTestmodul(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NeuLizenzTestmodul(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neue Lizenz GEN3 Testmodul";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NewCustomer() {
			return @NewCustomer(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NewCustomer(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neuer Kunde";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NewDeveloper() {
			return @NewDeveloper(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NewDeveloper(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neuer Entwickler";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NewLicense() {
			return @NewLicense(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NewLicense(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neue Lizenz";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NewModule() {
			return @NewModule(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NewModule(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neues Modul";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NewModuleProperty() {
			return @NewModuleProperty(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NewModuleProperty(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neue Eigenschaft";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NewProject() {
			return @NewProject(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NewProject(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Neues Projekt";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NoModulesVailable(string @Projekttyp) {
			return @NoModulesVailable(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @Projekttyp);
		}
		public static string @NoModulesVailable(global::System.Globalization.CultureInfo _language, string @Projekttyp) {
			return @NoModulesVailable(_language, _language, @Projekttyp);
		}
		public static string @NoModulesVailable(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @Projekttyp) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Keine Module im Projekt-Typ '{0}' verf\u00FCgbar.", @Projekttyp);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NotifyEMail() {
			return @NotifyEMail(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NotifyEMail(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "eMail interne";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @NotPortableExists() {
			return @NotPortableExists(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @NotPortableExists(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Eine nicht portable Lizenz mit diesem Systemtyp ist schon vorhanden.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ObInput() {
			return @ObInput(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ObInput(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projekt-Nummer|OB :";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @PleaseSaveProjectFirst() {
			return @PleaseSaveProjectFirst(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @PleaseSaveProjectFirst(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Bitte erst das Projekt speichern.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Portable() {
			return @Portable(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Portable(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Portable";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Project() {
			return @Project(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Project(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projekt";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectContractNoHasOnlyNCharachters(int @length) {
			return @ProjectContractNoHasOnlyNCharachters(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @length);
		}
		public static string @ProjectContractNoHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, int @length) {
			return @ProjectContractNoHasOnlyNCharachters(_language, _language, @length);
		}
		public static string @ProjectContractNoHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, int @length) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Die Auftragsnummer ist begrenzt auf {0} Zeichen.", @length);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectDescriptionHasOnlyNCharachters(int @length) {
			return @ProjectDescriptionHasOnlyNCharachters(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @length);
		}
		public static string @ProjectDescriptionHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, int @length) {
			return @ProjectDescriptionHasOnlyNCharachters(_language, _language, @length);
		}
		public static string @ProjectDescriptionHasOnlyNCharachters(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, int @length) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Die Projekt-Bezeichnung ist begrenzt auf {0} Zeichen.", @length);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectDescriptionIsMandatory() {
			return @ProjectDescriptionIsMandatory(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjectDescriptionIsMandatory(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Die Projekt-Beschreibung muss gef\u00FCllt sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectEMailIsMandatory() {
			return @ProjectEMailIsMandatory(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjectEMailIsMandatory(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Die externe eMail-Adresse muss gef\u00FCllt sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectGuidNotValid(string @contractNo, string @projectGuid) {
			return @ProjectGuidNotValid(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @contractNo, @projectGuid);
		}
		public static string @ProjectGuidNotValid(global::System.Globalization.CultureInfo _language, string @contractNo, string @projectGuid) {
			return @ProjectGuidNotValid(_language, _language, @contractNo, @projectGuid);
		}
		public static string @ProjectGuidNotValid(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @contractNo, string @projectGuid) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Der Projektschl\u00FCssel des Projekts '{0}' stimmt nicht mit dem Schl\u00FCssel '{1}' aus der Anfrage \u00FCberein.", @contractNo, @projectGuid);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectNotFound(string @contractNo) {
			return @ProjectNotFound(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @contractNo);
		}
		public static string @ProjectNotFound(global::System.Globalization.CultureInfo _language, string @contractNo) {
			return @ProjectNotFound(_language, _language, @contractNo);
		}
		public static string @ProjectNotFound(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @contractNo) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Es wurde kein Projekt f\u00FCr die Vertragsnummer '{0}' gefunden.", @contractNo);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectNotifyEMailIsMandatory() {
			return @ProjectNotifyEMailIsMandatory(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjectNotifyEMailIsMandatory(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Die interne eMail-Adresse muss gef\u00FCllt sein.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Projects() {
			return @Projects(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Projects(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projekte";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectType() {
			return @ProjectType(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjectType(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projekt-Typ";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectTypeEmpty() {
			return @ProjectTypeEmpty(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjectTypeEmpty(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Der Projekt-Typ ist nicht gef\u00FCllt.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjectTypesDontMatch(string @projectTypeProject, string @projectTypeRequest) {
			return @ProjectTypesDontMatch(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @projectTypeProject, @projectTypeRequest);
		}
		public static string @ProjectTypesDontMatch(global::System.Globalization.CultureInfo _language, string @projectTypeProject, string @projectTypeRequest) {
			return @ProjectTypesDontMatch(_language, _language, @projectTypeProject, @projectTypeRequest);
		}
		public static string @ProjectTypesDontMatch(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @projectTypeProject, string @projectTypeRequest) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Der Typ des Projekts '{0}' stimmt nicht mit dem der Anfrage '{1}' \u00FCberein.", @projectTypeProject, @projectTypeRequest);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjektleiterHerr() {
			return @ProjektleiterHerr(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjektleiterHerr(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projektleiter Herr";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjektleiterinFrau() {
			return @ProjektleiterinFrau(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjektleiterinFrau(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projektleiterin Frau";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjektleiterProjektleiterin() {
			return @ProjektleiterProjektleiterin(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjektleiterProjektleiterin(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projektleiter/Projektleiterin Herr/Frau";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @ProjektManagerInput() {
			return @ProjektManagerInput(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @ProjektManagerInput(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Projekt Manager :";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @RequestCantBeParsed() {
			return @RequestCantBeParsed(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @RequestCantBeParsed(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Die Daten dieser Installations-Anfrage sind nicht lesbar.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @RolesMenu() {
			return @RolesMenu(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @RolesMenu(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Rollen";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Save() {
			return @Save(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Save(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Speichern";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @SearchKey() {
			return @SearchKey(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @SearchKey(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Schl\u00FCssel";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @SomebodyElseDeletedTheRecord() {
			return @SomebodyElseDeletedTheRecord(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @SomebodyElseDeletedTheRecord(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Der Satz wurde in der Zwischenzeit gel\u00F6scht.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @SomebodyElseModifiedTheRecord() {
			return @SomebodyElseModifiedTheRecord(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @SomebodyElseModifiedTheRecord(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Der Satz wurde nicht gespeichert. Der Satz wurde in der Zwischenzeit ver\u00E4ndert.";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @TestLicenseCount() {
			return @TestLicenseCount(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @TestLicenseCount(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Lizenzen Test-System";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @TestLicenseCountShort() {
			return @TestLicenseCountShort(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @TestLicenseCountShort(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Lizenzen (Test)";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @UserIs(string @userName) {
			return @UserIs(global::LMobile.Internationalization.CurrentUICulture, global::LMobile.Internationalization.CurrentCulture, @userName);
		}
		public static string @UserIs(global::System.Globalization.CultureInfo _language, string @userName) {
			return @UserIs(_language, _language, @userName);
		}
		public static string @UserIs(global::System.Globalization.CultureInfo _language, global::System.Globalization.CultureInfo _formatProvider, string @userName) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return global::System.String.Format(_formatProvider, "Benutzer '{0}'", @userName);
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string @Version() {
			return @Version(global::LMobile.Internationalization.CurrentUICulture);
		}
		public static string @Version(global::System.Globalization.CultureInfo _language) {
			int _lcid = 0;
			while (_lcid != _language.LCID) {
				_lcid = _language.LCID;
				switch (_lcid) {
					case 127: return "Version";
				}
				_language = _language.Parent;
			}
			return null;
		}
		public static string _(string _resourceKey) {
			return _(global::LMobile.Internationalization.CurrentUICulture, _resourceKey);
		}
		public static string _(global::System.Globalization.CultureInfo _language, string _resourceKey) {
			switch ((_resourceKey ?? "").ToLower(global::System.Globalization.CultureInfo.InvariantCulture)) {
				case "absenderinput": return @AbsenderInput(_language);
				case "activity": return @Activity(_language);
				case "b_back": return @B_Back(_language);
				case "b_cancel": return @B_CANCEL(_language);
				case "b_no": return @B_NO(_language);
				case "b_ok": return @B_OK(_language);
				case "b_yes": return @B_YES(_language);
				case "back": return @Back(_language);
				case "cancel": return @Cancel(_language);
				case "confirmation": return @Confirmation(_language);
				case "contractno": return @ContractNo(_language);
				case "create": return @Create(_language);
				case "createportable": return @CreatePortable(_language);
				case "customer": return @Customer(_language);
				case "customeraddress": return @CustomerAddress(_language);
				case "customercity": return @CustomerCity(_language);
				case "customeremail": return @CustomerEMail(_language);
				case "customeremailismandatory": return @CustomerEMailIsMandatory(_language);
				case "customername1": return @CustomerName1(_language);
				case "customernameismandatory": return @CustomerNameIsMandatory(_language);
				case "customerno": return @CustomerNo(_language);
				case "customernoismandatory": return @CustomerNoIsMandatory(_language);
				case "d_installation": return @D_Installation(_language);
				case "d_module": return @D_Module(_language);
				case "deactivatecustomer": return @DeactivateCustomer(_language);
				case "description": return @Description(_language);
				case "descriptionempty": return @DescriptionEmpty(_language);
				case "developerdeleteconfirmation": return @DeveloperDeleteConfirmation(_language);
				case "developerlicensecantbeimported": return @DeveloperLicenseCantBeImported(_language);
				case "developersmenu": return @DevelopersMenu(_language);
				case "download": return @Download(_language);
				case "e_enddatesmallerstartdate": return @E_EndDateSmallerStartDate(_language);
				case "e_startdatebiggerenddate": return @E_StartDateBiggerEndDate(_language);
				case "edit": return @Edit(_language);
				case "einstellungenfurdenemail": return @EinstellungenFurDenEmail(_language);
				case "emailauswahlen": return @EmailAuswahlen(_language);
				case "emailinput": return @EmailInput(_language);
				case "emailnotfilled": return @EMailNotFilled(_language);
				case "emailsenden": return @EmailSenden(_language);
				case "emailsubject": return @EmailSubject(_language);
				case "exit": return @Exit(_language);
				case "expirationdate": return @ExpirationDate(_language);
				case "expirationinmonth": return @ExpirationInMonth(_language);
				case "export": return @Export(_language);
				case "frau": return @Frau(_language);
				case "fromaddress": return @FromAddress(_language);
				case "gen3customersmenu": return @Gen3CustomersMenu(_language);
				case "gen3licenselisttitle": return @Gen3LicenseListTitle(_language);
				case "gen3licensesmenu": return @Gen3LicensesMenu(_language);
				case "gen3projectsmenu": return @Gen3ProjectsMenu(_language);
				case "guid": return @Guid(_language);
				case "hardwarekey": return @HardwareKey(_language);
				case "hardwarekeyempty": return @HardwareKeyEmpty(_language);
				case "hardwarekeyused": return @HardwareKeyUsed(_language);
				case "herr": return @Herr(_language);
				case "import": return @Import(_language);
				case "importinstallationrequest": return @ImportInstallationRequest(_language);
				case "installationinformationtitle": return @InstallationInformationTitle(_language);
				case "installationkey": return @InstallationKey(_language);
				case "installationtype": return @InstallationType(_language);
				case "installationtypeempty": return @InstallationTypeEmpty(_language);
				case "l_lbladdtemplicenses": return @L_lblAddTempLicenses(_language);
				case "l_lblcountmodule": return @L_lblCountModule(_language);
				case "l_lblfill": return @L_lblFill(_language);
				case "l_lbllicensecountprod": return @L_lblLicenseCountProd(_language);
				case "l_lbllicensecounttest": return @L_lblLicenseCountTest(_language);
				case "l_lblserachmodulebyname": return @L_lblSerachModuleByName(_language);
				case "l_lblserachmodulebynamedescription": return @L_lblSerachModuleByNameDescription(_language);
				case "l_lbltemplicensesexpirationdate": return @L_lblTempLicensesExpirationDate(_language);
				case "l_lbltemplicensesstartdate": return @L_lblTempLicensesStartDate(_language);
				case "l_logout": return @L_Logout(_language);
				case "lblemail": return @lblEMail(_language);
				case "lbllanguage": return @lblLanguage(_language);
				case "lblprintername": return @lblPrinterName(_language);
				case "licensecount": return @LicenseCount(_language);
				case "licensecountshort": return @LicenseCountShort(_language);
				case "licenserequest": return @LicenseRequest(_language);
				case "logentryinformation": return @LogEntryInformation(_language);
				case "logentrymessagetype": return @LogEntryMessageType(_language);
				case "modulesmenu": return @ModulesMenu(_language);
				case "modulinput": return @ModulInput(_language);
				case "name": return @Name(_language);
				case "nameempty": return @NameEmpty(_language);
				case "navigatelogentries": return @NavigateLogEntries(_language);
				case "neuelizenzaddmodul": return @NeueLizenzAddModul(_language);
				case "neuelizenzincreasenumberuser": return @NeueLizenzIncreaseNumberUser(_language);
				case "neuelizenzinventurtemporar": return @NeueLizenzInventurTemporar(_language);
				case "neuelizenzneukunde": return @NeueLizenzNeuKunde(_language);
				case "neuelizenztestinstallation": return @NeueLizenzTestInstallation(_language);
				case "neulizenzneuemodulundbenuzter": return @NeuLizenzNeueModulUndBenuzter(_language);
				case "neulizenztestmodul": return @NeuLizenzTestmodul(_language);
				case "newcustomer": return @NewCustomer(_language);
				case "newdeveloper": return @NewDeveloper(_language);
				case "newlicense": return @NewLicense(_language);
				case "newmodule": return @NewModule(_language);
				case "newmoduleproperty": return @NewModuleProperty(_language);
				case "newproject": return @NewProject(_language);
				case "notifyemail": return @NotifyEMail(_language);
				case "notportableexists": return @NotPortableExists(_language);
				case "obinput": return @ObInput(_language);
				case "pleasesaveprojectfirst": return @PleaseSaveProjectFirst(_language);
				case "portable": return @Portable(_language);
				case "project": return @Project(_language);
				case "projectdescriptionismandatory": return @ProjectDescriptionIsMandatory(_language);
				case "projectemailismandatory": return @ProjectEMailIsMandatory(_language);
				case "projectnotifyemailismandatory": return @ProjectNotifyEMailIsMandatory(_language);
				case "projects": return @Projects(_language);
				case "projecttype": return @ProjectType(_language);
				case "projecttypeempty": return @ProjectTypeEmpty(_language);
				case "projektleiterherr": return @ProjektleiterHerr(_language);
				case "projektleiterinfrau": return @ProjektleiterinFrau(_language);
				case "projektleiterprojektleiterin": return @ProjektleiterProjektleiterin(_language);
				case "projektmanagerinput": return @ProjektManagerInput(_language);
				case "requestcantbeparsed": return @RequestCantBeParsed(_language);
				case "rolesmenu": return @RolesMenu(_language);
				case "save": return @Save(_language);
				case "searchkey": return @SearchKey(_language);
				case "somebodyelsedeletedtherecord": return @SomebodyElseDeletedTheRecord(_language);
				case "somebodyelsemodifiedtherecord": return @SomebodyElseModifiedTheRecord(_language);
				case "testlicensecount": return @TestLicenseCount(_language);
				case "testlicensecountshort": return @TestLicenseCountShort(_language);
				case "version": return @Version(_language);
				default: return _resourceKey;
			}
		}
	}
}
